{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\GitHub\\\\KYDP-Frontend\\\\Practicuum\\\\news-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n//import { Home } from '@mui/icons-material';\nimport './App.css';\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //state isLoggedIn should be here so can be passed to Home and Login \n  const [values, setValues] = useState({\n    username: \"\",\n    isLoggedIn: false\n  });\n\n  //function state\n  const checkisLoggedIn = () => {};\n  return (\n    /*#__PURE__*/\n    /**<div>\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/\" {...props} element={<Login/>} />\r\n          <Route path=\"/home\" {...props} element={<Home/>} />\r\n        </Routes>\r\n      </Router> \r\n    </div> */\n    // check if isLoggedIn is true -> Home\n    // check if isLoggedIn is false -> Login\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)\n    }, void 0, false)\n  );\n}\n_s(App, \"XK5CbWBupiQvTqDIz52Ogb17rTo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Login","Home","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","values","setValues","username","isLoggedIn","checkisLoggedIn","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/GitHub/KYDP-Frontend/Practicuum/news-app/src/App.js"],"sourcesContent":["//import { Home } from '@mui/icons-material';\r\nimport './App.css';\r\nimport Login from './components/Login';\r\nimport Home from './components/Home';\r\nimport { useState } from 'react';\r\n\r\n\r\nfunction App() {\r\n\r\n  //state isLoggedIn should be here so can be passed to Home and Login \r\n  const [values, setValues] = useState({\r\n    username: \"\",\r\n    isLoggedIn: false\r\n  });\r\n\r\n  //function state\r\n  const checkisLoggedIn = () => {\r\n    \r\n  }\r\n\r\n  return (\r\n    /**<div>\r\n      <Router>\r\n        <Routes>\r\n          <Route path=\"/\" {...props} element={<Login/>} />\r\n          <Route path=\"/home\" {...props} element={<Home/>} />\r\n        </Routes>\r\n      </Router> \r\n    </div> */\r\n\r\n    // check if isLoggedIn is true -> Home\r\n    // check if isLoggedIn is false -> Login\r\n\r\n    <>\r\n      <Login />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,oBAAoB;AACtC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC;IACnCS,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC,CAAC;;EAEF;EACA,MAAMC,eAAe,GAAGA,CAAA,KAAM,CAE9B,CAAC;EAED;IAAA;IACE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;IAEI;IACA;IAEAT,OAAA,CAAAE,SAAA;MAAAQ,QAAA,eACEV,OAAA,CAACJ,KAAK;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC,gBACT;EAAC;AAEP;AAACV,EAAA,CA9BQD,GAAG;AAAAY,EAAA,GAAHZ,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}